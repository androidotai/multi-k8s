const keys = require('./keys');

// Express App Setup
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(bodyParser.json());


// Postgres Client Setup
const { Pool } = require('pg');
const pool = new Pool({
  user: keys.pgUser,
  host: keys.pgHost,
  database: keys.pgDatabase,
  password: keys.pgPassword,
  port: keys.pgPort
});

pool.on('error', (err, client) => {
  console.error('Unexpected error on idle client', err)
  process.exit(-1)
})

// callback - checkout a client
pool.connect((err, client, done) => {
  if (err) throw err
  client.query('SELECT NOW()', (err, res) => {
    done()
    if (err) {
      console.log(err.stack)
    } else {
      console.log(res.rows[0])
    }
  })
})

// Express route handlers


app.get('/values/all', async (req, res) => {
  
  console.log('HIHI');
  const client = await pool.connect();
  try{
    const result = await client.query('SELECT NOW()');
    console.log(result.rows);
    res.send('this is all' + JSON.stringify(result.rows));
  }
  catch(err) {
    console.log(err.stack);
  }
  finally{
    client.release();
  }
  
});

app.get('/testing', (req, res) => {
  res.send('this is testing');
})


app.listen(5000, err => {
  console.log('Listening');
});
